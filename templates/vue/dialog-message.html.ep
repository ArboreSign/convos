<template class="vue-dialog-message">
  <span v-if="msg.type == 'action'">âœ§</span>
  <a href="#insert:{{msg.from}}" class="title" @click="insertIntoInput">{{msg.from}}</a>
  <div class="message" v-if="msg.type != 'error'">{{{message() | markdown}}}</div>
  <div class="error" v-if="msg.type == 'error'">{{msg.message}}</div>
  <span class="secondary-content ts tooltipped" :title="msg.ts.toLocaleString()">{{msg.ts | timestring}}</span>
</template>
<script type="vue/component">
module.exports = {
  props:   ["dialog", "msg", "user"],
  methods: {
    insertIntoInput: function() {
      this.$dispatch("insertIntoInput", e.target.href.replace(/^.*#insert:/, ""));
    },
    message: function() {
      var self = this;
      if (this.msg.participants) return this.makeParticipantsMessage();
      return this.msg.message.xmlEscape().autoLink({
        target: "_blank",
        after:  function(url, id) {
          $.get("/api/embed?url=" + encodeURIComponent(url), function(html, textStatus, xhr) {
            self.$dispatch("loadOffScreen", html, id);
          });
          return null;
        }
      });
    },
    makeParticipantsMessage: function() {
      var list = this.msg.participants;
      return String.prototype.numberAsString.call(list.length).ucFirst()
        + " participants in " + this.dialog.name + " connected to "
        + this.dialog.connection.name + ": "
        + list.map(function(p, i) {
          return p.mode + p.name;
        }).sort().join(", ");
    }
  },
  ready: function() {
    var c = [this.msg.type || "normal"];
    if (this.msg.highlight) c.push("highlight");
    c.push(this.dialog.groupedMessage(this.msg) ? "same-user" : "changed-user");
    $(this.$el).addClass(c.join(" "));
  }
};
</script>
