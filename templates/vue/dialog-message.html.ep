<template class="vue-dialog-message">
  <span v-if="msg.type == 'action'">âœ§</span>
  <a href="#insert:{{msg.from}}" class="title" @click.prevent="insertIntoInput(msg.from)">{{msg.from}}</a>
  <div class="message" v-if="msg.type != 'error'"><span>{{{message() | markdown}}}</span></div>
  <div class="error" v-if="msg.type == 'error'">{{msg.message}}</div>
  <span class="secondary-content ts tooltipped" :title="msg.ts.toLocaleString()" v-if="msg.ts">{{msg.ts | timestring}}</span>
</template>
<script type="vue/component">
module.exports = {
  props:   ["dialog", "msg", "user"],
  methods: {
    insertIntoInput: function(str) {
      this.$dispatch("insertIntoInput", str);
    },
    message: function() {
      var self = this;
      if (this.msg.participants) return this.makeParticipantsMessage();
      return this.msg.message.xmlEscape().autoLink({
        target: "_blank",
        after:  function(url, id) {
          $.get("/api/embed?url=" + encodeURIComponent(url), function(html, textStatus, xhr) {
            self.$dispatch("loadOffScreen", html, id);
          });
          return null;
        }
      });
    },
    makeParticipantsMessage: function() {
      var list = this.msg.participants;
      return String.prototype.numberAsString.call(list.length).ucFirst()
        + " participants in " + this.dialog.name + " connected to "
        + this.dialog.connection.name + ": "
        + list.map(function(p, i) {
          return '<a href="#whois:' + p.name + '">' + p.mode + p.name + "</a>";
        }).sort().join(", ");
    }
  },
  ready: function() {
    var self = this;
    var c    = [this.msg.type || "normal"];

    $(this.$el).addClass(this.msg.classNames.join(" "));

    // ugly hack since makeParticipantsMessage() makes dynamic html
    this.$nextTick(function() {
      $(this.$el).find('[href*="#whois:"]').click(function(e) {
        e.preventDefault();
        self.dialog.connection.send("/whois " + this.href.match(/whois:(.*)/)[1]);
      });
    });
  }
};
</script>
