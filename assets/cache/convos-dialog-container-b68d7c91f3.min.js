(function(){Vue.component("convos-dialog-container",{props:["dialog","user"],data:function(){return{atBottom:true,scrollElement:null,scrollThreshold:!!("ontouchstart" in window)?60:40};},watch:{'settings.windowHeight':function(v,o){if(this._atBottomTid)return;var atBottom=this.atBottom;this._atBottomTid=setTimeout(function(){this.scrollToBottom({gotoBottom:atBottom});this._atBottomTid=0;}.bind(this),300);}},methods:{closeDialog:function(){this.dialog.connection().send("/close "+this.dialog.name);},getInfo:function(){if(this.user.connected){this.dialog.refreshParticipants(function(err){if(!err)return this.addMessage({type:"dialog-info"});this.addMessage({message:err[0].message,type:"error"});});}
else{this.dialog.addMessage({message:"Convos is connecting to the server...",type:"notice"});}},onScroll:function(){var self=this;var elem=this.scrollElement;this.atBottom=elem.scrollHeight<elem.offsetHeight+this.scrollThreshold+elem.scrollTop;if(elem.scrollTop<this.scrollThreshold){this.dialog.historicMessages({},function(err,cb){var scrollHeight=elem.scrollHeight;if(cb)cb();if(self.atBottom)return self.scrollToBottom({});window.nextTick(function(){elem.scrollTop=elem.scrollHeight-scrollHeight-100;});});}},scrollToBottom:function(args){var elem=this.scrollElement;if(this.atBottom||args.gotoBottom){window.nextTick(function(){elem.scrollTop=elem.scrollHeight;});}}},ready:function(){this.scrollElement=$("main",this.$el)[0];this.scrollElement.addEventListener("scroll",this.onScroll);this.dialog.on("active",function(){this.scrollToBottom({gotoBottom:true});}.bind(this));this.dialog.on("message",this.scrollToBottom);},beforeDestroy:function(){this.scrollElement.removeEventListener("scroll",this.onScroll);},template:"<div class=\"convos-dialog-container\">\n    <header>\n      <convos-toggle-main-menu :user=\"user\"></convos-toggle-main-menu>\n      <h2 @click.prevent=\"getInfo\" v-tooltip=\"dialog.topic || &#39;No topic is set.&#39;\">{{dialog.name || &#39;Convos&#39;}}</h2>\n      <convos-header-links :toggle=\"true\" :user=\"user\">\n        <a :class=\"user.connected ? &#39;&#39; : &#39;btn-floating deep-orange&#39;\" @click.prevent=\"getInfo\" href=\"#info\" v-tooltip.literal=\"Information about dialog\"><i class=\"material-icons\">{{user.connected ? &#39;info&#39; : &#39;info_outline&#39;}}</i></a>\n        <a @click.prevent=\"closeDialog\" href=\"#close\" v-tooltip.literal=\"Close dialog\"><i class=\"material-icons\">close</i></a>\n      </convos-header-links>\n    </header>\n    <main>\n      <component :dialog=\"dialog\" :is=\"&#39;convos-message-&#39; + msg.type\" :msg=\"msg\" :user=\"user\" v-for=\"msg in dialog.messages\" v-if=\"msg.type\"></component>\n    </main>\n    <convos-input :dialog=\"dialog\" :user=\"user\"></convos-input>\n  </div>\n"})})();