(function(){Vue.component("md-autocomplete",{props:["id","placeholder","options","value"],computed:{filteredOptions:function(){var re=new RegExp(this.value,'i');return this.options.filter(function(o){return(o.text||o.value).match(re);});}},data:function(){return{selected:-1};},methods:{keydown:function(e){switch(e.keyCode){case 38:case 40:e.preventDefault();}},keyup:function(e){switch(e.keyCode){case 13:if(this.selected>=0&&this.filteredOptions[this.selected]){this.select(this.filteredOptions[this.selected]);}
else if(this.value.length){this.select({value:this.value});}
break;case 38:if(--this.selected<0)this.selected=this.filteredOptions.length-1;this.scrollIntoView();break;case 40:if(++this.selected>=this.filteredOptions.length)this.selected=0;this.scrollIntoView();break;default:if(this.selected<0)this.selected=0;if(!this.value)this.selected=-1;}},optionClass:function(o,i){return{active:i==this.selected?true:false,link:true};},scrollIntoView:function(){var li=this.$el.querySelectorAll("li")[this.selected];if(li)this.$el.querySelector(".autocomplete").scrollTop=li.offsetTop;},select:function(option){this.$emit("select",option);}},template:"<input :id=\"id\" :placeholder=\"placeholder\" @keydown=\"keydown\" @keyup=\"keyup\" autocomplete=\"off\" spellcheck=\"false\" type=\"text\" v-model=\"value\">\n  <div :class=\"filteredOptions.length ? &#39;&#39; : &#39;hidden&#39;\" class=\"autocomplete\">\n    <ul>\n      <li :class=\"optionClass(o, $index)\" v-for=\"o in filteredOptions\" v-tooltip=\"o.title\">\n        <a @click=\"select(o)\" class=\"truncate\" href=\"option://{{o.value}}\">{{o.text || o.value}}</a>\n      </li>\n    </ul>\n  </div>\n"})})();